<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hielectro.welpair.mypage.model.dao.MypageMapper">

<!--배송지목록-->
    <resultMap id="addressListResultMap" type="com.hielectro.welpair.mypage.model.dto.AddressDTO">
        <id property="addressId" column="ADDRESS_ID"/>
        <result property="isDefaultAddress" column="IS_DEFAULT_ADDRESS"/>
        <result property="addressDetail" column="ADDRESS_DETAIL"/>
        <result property="addressName" column="ADDRESS_NAME"/>
        <result property="addressPhone" column="ADDRESS_PHONE"/>
        <result property="empNo" column="EMP_NO"/>
    </resultMap>

<!-- 마이포인트 이력 조회 -->
    <resultMap id="mypointListResultMap" type="com.hielectro.welpair.member.model.dto.PointHistoryDTO">
        <id property="pointNo" column="POINT_NO"/>
        <result property="empNo" column="EMP_NO"/>
        <result property="pointDate" column="POINT_DATE"/>
        <result property="pointAmount" column="POINT_AMOUNT"/>
        <result property="pointType" column="POINT_TYPE"/>
        <result property="pointReason" column="POINT_REASON"/>
        <association property="pointPayDTO" javaType="com.hielectro.welpair.payment.model.dto.PointPayDTO">
            <result property="paymentNo" column="PAYMENT_NO"/>
        </association>
    </resultMap>


<!--  위시리스트  -->
    <resultMap id="wishSellProductResultMap" type="com.hielectro.welpair.mypage.model.dto.WishlistSellProductDTO">
        <id property="sellProductId" column="SELL_PRODUCT_ID" />
        <result property="wishId" column="WISH_ID" />
        <result property="productName" column="SELL_PAGE_TITLE"/>
        <result property="price" column="PRODUCT_PRICE"/>
        <result property="thumbnail" column="SELL_THUMB_IMAGE_FILE_NAME"/>
    </resultMap>

<!-- 내가쓴글 - 문의글 목록 조회 -->

    <resultMap id="myBoardListResultMap" type="com.hielectro.welpair.board.model.dto.BoardDTO">
        <id property="no" column="BOARD_NO"></id>
        <result property="category" column="BOARD_CATEGORY"></result>
        <result property="title" column="BOARD_TITLE"></result>
        <result property="content" column="BOARD_CONTENT"></result>
        <result property="date" column="BOARD_DATE"></result>
        <result property="empNo" column="EMP_NO"></result>
        <result property="isPrivate" column="IS_PRIVATE"></result>
    </resultMap>


    <!-- 배송지 목록 조회   -->
    <select id="getAddressList" resultMap="addressListResultMap">
        select *
        from T_ADDRESS
        where EMP_NO = #{empNo}
    </select>

<!--  배송지 삭제 버튼  -->
    <delete id="deleteAddress" parameterType="String">
        DELETE
        FROM T_ADDRESS A
        WHERE A.ADDRESS_ID = #{ addressId }
    </delete>

<!--  배송지 등록 버튼  -->
    <insert id="insertAddress" parameterType="com.hielectro.welpair.mypage.model.dto.AddressDTO">
        INSERT INTO T_ADDRESS A
        (ADDRESS_ID, IS_DEFAULT_ADDRESS, ADDRESS_DETAIL
            , ADDRESS_NAME, ADDRESS_PHONE, EMP_NO)
        VALUES
        (
         #{addressId}, #{isDefaultAddress}, #{addressDetail}
          , #{addressName}, #{addressPhone}, #{empNo}
        )
    </insert>

<!-- 배송지아이디 시퀀스 이용 -->
    <select id="nextAddressId" resultType="String">
        SELECT SEQ_ADDRESS_ID.NEXTVAL FROM DUAL
    </select>

<!-- 기존의 기본배송지를 N으로 업데이트 -->
    <update id="resetDefaultAddress" parameterType="String">
        UPDATE T_ADDRESS SET IS_DEFAULT_ADDRESS = 'N'
        WHERE ADDRESS_ID = (SELECT ADDRESS_ID FROM T_ADDRESS WHERE EMP_NO = #{empNo} AND IS_DEFAULT_ADDRESS = 'Y')
    </update>




<!-- 마이포인트 이력 조회  -->
    <select id="mypointList" resultMap="mypointListResultMap">
        SELECT * FROM
            (SELECT row_number() OVER (ORDER BY PH.EMP_NO) AS rnum,
            PH.POINT_NO, PH.EMP_NO, PH.POINT_DATE, PH.POINT_AMOUNT, PH.POINT_TYPE,PH.POINT_REASON
            FROM T_POINT_HISTORY PH
            WHERE PH.EMP_NO = #{empNo}
            <if test='pointType != null and pointType.equals("earn")'>
                AND PH.POINT_TYPE = '적립'
            </if>
            <if test='pointType != null and pointType.equals("used")'>
                AND PH.POINT_TYPE = '사용'
            </if>)
        WHERE rnum BETWEEN #{startRow} AND #{endRow}
    </select>
    <select id="myPointListCount" resultType="_int" parameterType="string">
        SELECT COUNT(*)
        FROM T_POINT_HISTORY
        WHERE EMP_NO = #{empNo}
    </select>
    <select id="getPointBalance" resultType="_int" parameterType="string">
        SELECT M.POINT_BALANCE
        FROM T_MEMBER M
        WHERE EMP_NO = #{empNo}
    </select>


<!-- 위시리스트 -->
    <select id="getWishId" resultType="String">
        SELECT WISH_ID FROM T_WISH WHERE EMP_NO = #{ empNo }
    </select>

    <select id="getWishlistList" resultMap="wishSellProductResultMap">
        SELECT * FROM
        (SELECT row_number() OVER (ORDER BY SP.SELL_PRODUCT_ID) AS rnum,
               WS.SELL_PRODUCT_ID,
               P.PRODUCT_CODE,
               SPG.SELL_PAGE_TITLE,
               P.PRODUCT_PRICE,
               TI.SELL_THUMB_IMAGE_FILE_NAME
        FROM T_WISH_SELL_PRODUCT WS
         JOIN T_SELL_PRODUCT SP ON (WS.SELL_PRODUCT_ID = SP.SELL_PRODUCT_ID)
         JOIN T_PRODUCT P ON (SP.PRODUCT_CODE = P.PRODUCT_CODE)
         JOIN T_SELL_ITEM_PAGE SIP ON (SP.SELL_PRODUCT_ID = SIP.SELL_PRODUCT_ID)
         JOIN T_SELL_PAGE SPG ON (SIP.SELL_PAGE_NO = SPG.SELL_PAGE_NO)
         LEFT JOIN (SELECT SELL_PAGE_NO, MIN(SELL_THUMB_IMAGE_FILE_NAME) AS SELL_THUMB_IMAGE_FILE_NAME
                       FROM T_THUMB_IMAGE
                      GROUP BY SELL_PAGE_NO) TI ON (SPG.SELL_PAGE_NO = TI.SELL_PAGE_NO)
        WHERE WS.WISH_ID = #{ wishId }
          AND TI.SELL_THUMB_IMAGE_FILE_NAME IS NOT NULL)
        WHERE rnum BETWEEN #{startRow} AND #{endRow}
    </select>

    <select id="wishItemCount" resultType="_int">
        SELECT COUNT(*) FROM
            (SELECT WS.SELL_PRODUCT_ID,
               P.PRODUCT_CODE,
               SPG.SELL_PAGE_TITLE,
               P.PRODUCT_PRICE,
               TI.SELL_THUMB_IMAGE_FILE_NAME
                FROM T_WISH_SELL_PRODUCT WS
                 JOIN T_SELL_PRODUCT SP ON (WS.SELL_PRODUCT_ID = SP.SELL_PRODUCT_ID)
                 JOIN T_PRODUCT P ON (SP.PRODUCT_CODE = P.PRODUCT_CODE)
                 JOIN T_SELL_ITEM_PAGE SIP ON (SP.SELL_PRODUCT_ID = SIP.SELL_PRODUCT_ID)
                 JOIN T_SELL_PAGE SPG ON (SIP.SELL_PAGE_NO = SPG.SELL_PAGE_NO)
                 LEFT JOIN (SELECT SELL_PAGE_NO, MIN(SELL_THUMB_IMAGE_FILE_NAME) AS SELL_THUMB_IMAGE_FILE_NAME
                FROM T_THUMB_IMAGE
                GROUP BY SELL_PAGE_NO) TI ON (SPG.SELL_PAGE_NO = TI.SELL_PAGE_NO)
        WHERE WS.WISH_ID = #{ wishId }
          AND TI.SELL_THUMB_IMAGE_FILE_NAME IS NOT NULL)
    </select>


<!-- 내가쓴글 - 문의글목록 -->
    <select id="myQnaList" resultMap="myBoardListResultMap">
        SELECT * FROM
        (SELECT row_number() OVER (ORDER BY B.BOARD_DATE DESC) AS rnum,
            B.BOARD_NO, B.BOARD_CATEGORY, B.BOARD_TITLE, B.BOARD_CONTENT, B.BOARD_DATE
        FROM T_BOARD B
        WHERE EMP_NO = #{empNo}
        AND BOARD_CATEGORY = 'BORD_1') A
        WHERE rnum BETWEEN #{startRow} AND #{endRow}
    </select>
    <select id="myQnaCount" resultType="_int">
        SELECT COUNT(*) FROM T_BOARD
        WHERE EMP_NO = #{empNo}
        AND BOARD_CATEGORY = 'BORD_1'
    </select>



</mapper>
